root = true

# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
# StyleCop support: https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/.editorconfig

###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
#use soft tabs (spaces) for indentation
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################

[*.{cs,vb}]
# Organize usings
#----------------
dotnet_sort_system_directives_first = true
csharp_using_directive_placement = outside_namespace:warning

# this. preferences
#------------------
#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords vs BCL types preferences
#-------------------------------------------
#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
#------------------------
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
#---------------------
#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
#-----------------------------
#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################

# Style Definitions
#------------------
dotnet_naming_style.pascal_case_style.capitalization             = pascal_case
# Use PascalCase for constant fields  
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds            = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities  = *
dotnet_naming_symbols.constant_fields.required_modifiers          = const
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
end_of_line = crlf

###############################
# C# Coding Conventions       #
###############################

[*.cs]
# var preferences
#----------------
#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = true:suggestion
#prefer var when the type is already mentioned on the right-hand side of a declaration expression
csharp_style_var_when_type_is_apparent = true:suggestion
#prefer var over explicit type in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = true:suggestion

# Expression-bodied members
#--------------------------
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:silent
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
#prefer expression-bodied members for properties
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent

# Pattern matching preferences
#-----------------------------
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Null-checking preferences
#--------------------------
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
#---------------------
#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
#-----------------------------
#prefer curly braces even for one line of code
csharp_prefer_braces = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
#prefer local functions over anonymous functions
csharp_style_pattern_local_over_anonymous_function = true:suggestion
#prefer out variables to be declared inline in the argument list of a method call when possible
csharp_style_inlined_variable_declaration = true:suggestion
# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement = true:silent

###############################
# C# Formatting Rules         #
###############################

# New line preferences
#---------------------
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
#require members of object intializers to be on separate lines
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
#------------------------
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
#------------------
#require NO space between a cast and the value
csharp_space_after_cast = false
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true
#require a space after the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
#---------------------
#leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true
#leave code block on single line
csharp_preserve_single_line_blocks = true

###############################
# Resharper Rules             #
###############################

# Resharper automatically uses the most common editorconfig Rules
# but we can also add resharper-specific rules here if needed.
# https://www.jetbrains.com/help/resharper/Reference__Code_Inspections_CSHARP.html
resharper_convert_to_using_declaration_highlighting = silent

###############################
# C# Analyzer Rules           #
###############################

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = silent

# RCS1037: Remove trailing white-space.
dotnet_diagnostic.RCS1037.severity = silent

# U2U1108: StringBuilders should be initialized with capacity
dotnet_diagnostic.U2U1108.severity = silent

# U2U1103: Index strings correctly
dotnet_diagnostic.U2U1103.severity = silent

# U2U1009: Async or iterator methods should avoid state machine generation for early exits (throws or synchronous returns)
dotnet_diagnostic.U2U1009.severity = silent

# S112: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = silent

# S1168: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = silent

# S4136: Method overloads should be grouped together
dotnet_diagnostic.S4136.severity = silent

# S2346: Flags enumerations zero-value members should be named "None"
dotnet_diagnostic.S2346.severity = silent

# S3358: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = silent

# S2699: Test method should contain assertion
dotnet_diagnostic.S2699.severity = none

# RCS1090: Add call to 'ConfigureAwait' (or vice versa).
dotnet_diagnostic.RCS1090.severity = silent

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = silent

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1028: Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = none

# SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = none

# SA0001 XML Docs disabled
dotnet_diagnostic.SA0001.severity = none

# SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = none

# SA1512: Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = none

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = none

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = none

# SA1601: Partial elements should be documented
dotnet_diagnostic.SA1601.severity = none

# SA1011: Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = none

# S3928: Parameter names used into ArgumentException constructors should match an existing one 
dotnet_diagnostic.S3928.severity = silent

# SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = silent

# CC0021: Use nameof
dotnet_diagnostic.CC0021.severity = silent

# CC0022: Should dispose object
dotnet_diagnostic.CC0022.severity = silent
csharp_using_directive_placement = outside_namespace:warning
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = none
