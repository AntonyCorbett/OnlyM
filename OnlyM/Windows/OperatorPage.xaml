<UserControl x:Class="OnlyM.Windows.OperatorPage"
             x:Name="OnlyMOperatorPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OnlyM.Windows"
             mc:Ignorable="d" 
             DataContext="{Binding Operator, Mode=OneWay, Source={StaticResource Locator}}"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:models="clr-namespace:OnlyM.Models"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="18"
             AllowDrop="True"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="450" d:DesignWidth="600" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />

            <DataTemplate DataType="{x:Type models:MediaItem}">
                <materialDesign:Card Height="120" Margin="4" Padding="4"
                                     materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                     materialDesign:ShadowAssist.ShadowEdges="Bottom">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="0" Background="Black" Margin="0,0,5,0">
                            <Grid>
                                <Image Source="{Binding ThumbnailImageSource}"></Image>
                                <Ellipse 
                                    Width="29" Height="29" 
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Stroke="{StaticResource MaterialDesignDarkBackground}"
                                    Margin="3"
                                    Fill="{StaticResource MaterialDesignPaper}">

                                </Ellipse>

                                <materialDesign:PackIcon 
                                    Margin="5"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Kind="{Binding IconName}"
                                    Foreground="{Binding IconBrush}"
                                    Height="24"
                                    Width="24" />
                            </Grid>
                        </Border>

                        <Grid Grid.Column="1" Margin="10,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="36" />
                                <RowDefinition Height="28" />
                            </Grid.RowDefinitions>
                            
                            <TextBlock Grid.Row="0" 
                                       TextTrimming="CharacterEllipsis" 
                                       Style="{StaticResource MaterialDesignTitleTextBlock}"
                                       Text="{Binding Name}"/>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="95"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0"
                                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                                           Visibility="{Binding Path=HasDuration, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           FontSize="16"
                                           Foreground="{Binding DurationColorBrush}"
                                           Text="{Binding DurationString}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0"
                                           Style="{StaticResource MaterialDesignBody1TextBlock}"
                                           Visibility="{Binding Path=HasDuration, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           FontSize="16"
                                           Foreground="{Binding PlaybackTimeColorBrush}"
                                           Text="{Binding PlaybackTimeString}"/>
                                <Button Style="{StaticResource MaterialDesignRaisedLightButton}"
                                        Width="50"
                                        VerticalAlignment="Stretch"
                                        Command="{Binding Path=DataContext.MediaControlPauseCommand, ElementName=OnlyMOperatorPage}"
                                        CommandParameter="{Binding Id}"
                                        Visibility="{Binding Path=IsPauseButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        HorizontalAlignment="Left"
                                        Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">

                                    <materialDesign:PackIcon 
                                        Kind="{Binding PauseIconKind}"
                                        HorizontalAlignment="Center"
                                        Height="24"
                                        Width="24" />

                                </Button>
                            </Grid>
                            <ProgressBar Grid.Row="2" 
                                       Visibility="{Binding Path=HasDurationAndIsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Value="{Binding PlaybackPositionDeciseconds, Mode=OneWay}" 
                                       Maximum="{Binding DurationDeciseconds}"/>
                            <Slider Grid.Row="2" 
                                       Orientation="Horizontal"
                                       TickFrequency="1"
                                       Margin="0,5,0,0"
                                       Visibility="{Binding Path=IsSliderVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Value="{Binding PlaybackPositionDeciseconds, Mode=TwoWay}" 
                                       Maximum="{Binding DurationDeciseconds}"/>
                        </Grid>

                        <ProgressBar
                            Grid.Column="2"
                            Visibility="{Binding Path=IsWaitingAnimationVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Style="{StaticResource MaterialDesignCircularProgressBar}"
                            Value="0"
                            IsIndeterminate="True" />

                        <Button
                            Width="50"
                            Height="50"
                            Grid.Column="2"
                            IsEnabled="{Binding IsPlayButtonEnabled}"
                            Visibility="{Binding Path=IsPlayButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding Path=DataContext.MediaControlCommand1, ElementName=OnlyMOperatorPage}"
                            CommandParameter="{Binding Id}"
                            Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}">
                            <materialDesign:PackIcon
                                Kind="Play"
                                Height="40"
                                Width="40" />
                        </Button>

                        <Button
                            Width="50"
                            Height="50"
                            Grid.Column="2"
                            Visibility="{Binding Path=IsStopButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding Path=DataContext.MediaControlCommand1, ElementName=OnlyMOperatorPage}"
                            CommandParameter="{Binding Id}"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsMediaChanging}"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                            Style="{StaticResource MaterialDesignFloatingActionAccentButton}">
                            <materialDesign:PackIcon
                                Kind="Stop"
                                Height="40"
                                Width="40" />
                        </Button>

                    </Grid>
                </materialDesign:Card>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.Loaded">
            <BeginStoryboard>
                <Storyboard >
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    
    <ItemsControl ItemsSource="{Binding MediaItems}">
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>

</UserControl>



